trigger:
- main

pool:
  vmImage: ubuntu-latest
  
variables:
  imageName: 'azure-devops-CI-pipeline'

strategy:
  matrix:
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'
  
- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      print('Hello world 1')
      print('Hello world 2')

- task: Docker@2
  displayName: Build an image
  inputs:
    repository: $(imageName)
    command: build
    Dockerfile: Dockerfile


- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import sys
      print('A execução do script é:', str(sys.argv[0]))
      print('O argumento é:', str(sys.argv))
      import argparse
      parser = argparse.ArgumentParser()
      parser.add_argument("--world", help="Forneça o nome do mundo para dar oi.")
      args = parser.parse_args()
      print('Hello', args.world)
    arguments: --world Venus

- script: |
    python -m pip install --upgrade pip setuptools wheel flake8 pytest pytest-azurepipelines
    pip install pytest-cov
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
  displayName: 'Run pytest'



